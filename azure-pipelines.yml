# azure-pipelines.yml
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Terraform version to install
  terraformVersion: '1.2.0'
  # Azure service connection name
  azureServiceConnection: 'azure_connection' # Ensure this matches the name of your service connection

stages:
- stage: Terraform
  jobs:
  - job: Terraform
    displayName: 'Terraform Apply'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - task: TerraformInstaller@0
      inputs:
        terraformVersion: $(terraformVersion)

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##[section]Initializing Terraform"
          terraform init -backend-config="resource_group_name=ap_rg1" \
                         -backend-config="storage_account_name=terraform524" \
                         -backend-config="container_name=container52" \
                         -backend-config="key=terraform_dev.tfstate"

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##[section]Applying Terraform Plan"
          terraform apply -var-file=dev.tfvars -auto-approve
