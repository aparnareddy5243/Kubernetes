# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  - task: 
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/gweb/kubcluster_files'
    commandOptions: 'terraform plan -out main.tfplan --var-file=dev.tfvars'
    backendServiceArm: 'azure_connection'
    backendAzureRmResourceGroupName: 'ap_rg1'
    backendAzureRmStorageAccountName: 'terraform524'
    backendAzureRmContainerName: 'kubecontainer'
    backendAzureRmKey: - task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '''$(System.DefaultWorkingDirectory)/gweb/kubcluster_files'''
    commandOptions: '''terraform plan -out main.tfplan --var-file=dev.tfvars'''
    backendServiceArm: 'azure_connection'
    backendAzureRmResourceGroupName: 'ap_rg1'
    backendAzureRmStorageAccountName: 'terraform524'
    backendAzureRmContainerName: 'kubecontainer'
    backendAzureRmKey: 'terraform_dev.tfstate'
